<robot name="base_link" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:property name="yaml_file" value="$(find turtle_brick)/config/turtle.yaml" />
    <xacro:property name="props" value="${xacro.load_yaml(yaml_file)['/**']['ros__parameters']}" />
    <xacro:property name="base_link_length"  value="${props['base_link_length']}" />
    <xacro:property name="platform_cylinder_radius"  value="${props['platform_cylinder_radius']}" />
    <xacro:property name="platform_cylinder_height"  value="${props['platform_cylinder_height']}" />
    <xacro:property name="connector_height"  value="${math.sqrt(platform_cylinder_radius**2+(platform_cylinder_height/2)**2)}" />
    <xacro:property name="platform_connector_radius_ratio"  value="${props['platform_connector_radius_ratio']}" />
    <xacro:property name="platform_height"  value="${props['platform_height']}" />
    <xacro:property name="stem_height"  value="${props['stem_height']}" />
    <xacro:property name="wheel_radius"  value="${props['wheel_radius']}" />

    <xacro:property name="radius"  value="${platform_cylinder_radius*platform_connector_radius_ratio}" />
    <xacro:property name="length"  value="${platform_height - platform_cylinder_height - base_link_length - stem_height - wheel_radius*2}" />
    

    <xacro:macro name="platform_connector" params="name">
        <link name="${name}">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${radius}" 
                              length="${length}"/>
                </geometry>
                <material name="platform_connector_color">
                    <color rgba="0.0 1.0 1.0 1.0"/>
                </material>
            </visual>
        </link>
    </xacro:macro>

</robot>
